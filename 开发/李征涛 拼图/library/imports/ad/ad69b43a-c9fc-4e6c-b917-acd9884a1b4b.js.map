{"version":3,"sources":["assets\\script\\game.js"],"names":["cc","Class","Component","properties","blockPrefab","Prefab","onLoad","window","game","resources","load","err","texture","picTexture","picNodeArr","Array","from","i","j","block","instantiate","node","addChild","setPosition","v2","getComponent","init","randPic","exIndex","parseInt","Math","random","exBlock","pos","position","exPos","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,WAAW,EAAEJ,EAAE,CAACK;EADR,CAHP;EAQLC,MARK,oBAQK;IAAA;;IACNC,MAAM,CAACC,IAAP,GAAa,IAAb,CADM,CAEN;;IAEAR,EAAE,CAACS,SAAH,CAAaC,IAAb,CAAkB,GAAlB,EAAsB,UAACC,GAAD,EAAKC,OAAL,EAAe;MACjC,KAAI,CAACC,UAAL,GAAmBD,OAAnB;MACA,KAAI,CAACE,UAAL,GAAkBC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqB;QAAA,OAAM,IAAIA,KAAJ,CAAU,CAAV,CAAN;MAAA,CAArB,CAAlB,CAFiC,CAGjC;MACA;;MACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QACxB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;UACxB,IAAIC,KAAK,GAAGnB,EAAE,CAACoB,WAAH,CAAe,KAAI,CAAChB,WAApB,CAAZ;;UACA,KAAI,CAACiB,IAAL,CAAUC,QAAV,CAAmBH,KAAnB;;UACAA,KAAK,CAACI,WAAN,CAAkBvB,EAAE,CAACwB,EAAH,CAAMN,CAAC,GAAC,GAAR,EAAY,CAACD,CAAD,GAAG,GAAf,CAAlB;UACCE,KAAK,CAACM,YAAN,CAAmB,OAAnB,EAA4BC,IAA5B,CAAiCd,OAAjC,EAAyCZ,EAAE,CAACwB,EAAH,CAAMN,CAAN,EAAQD,CAAR,CAAzC,EAJuB,CAKvB;;UACA,KAAI,CAACH,UAAL,CAAgBG,CAAhB,EAAmBC,CAAnB,IAAuBC,KAAvB,CANuB,CAOxB;QAEH;MACJ;;MACD,KAAI,CAACQ,OAAL;IACH,CAlBD;EAmBH,CA/BI;EAgCLA,OAhCK,qBAgCI;IAAC;IACN,KAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MACxB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QACxB,IAAIC,KAAK,GAAE,KAAKL,UAAL,CAAgBG,CAAhB,EAAmBC,CAAnB,CAAX;QACA,IAAIU,OAAO,GAAE;UACTX,CAAC,EAAEY,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAc,CAAf,CADF;UAETb,CAAC,EAAEW,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAc,CAAf;QAFF,CAAb;QAIA,IAAIC,OAAO,GAAG,KAAKlB,UAAL,CAAgBc,OAAO,CAACX,CAAxB,EAA2BW,OAAO,CAACV,CAAnC,CAAd;QACA,IAAIe,GAAG,GAAGd,KAAK,CAACe,QAAhB;QACA,IAAIC,KAAK,GAAGH,OAAO,CAACE,QAApB;QACAf,KAAK,CAACI,WAAN,CAAkBY,KAAlB;QACAH,OAAO,CAACT,WAAR,CAAoBU,GAApB;QACA,KAAKnB,UAAL,CAAgBG,CAAhB,EAAmBC,CAAnB,IAAuBc,OAAvB;QACA,KAAKlB,UAAL,CAAgBc,OAAO,CAACX,CAAxB,EAA2BW,OAAO,CAACV,CAAnC,IAAsCC,KAAtC;MACH;IACJ;EACJ,CAjDI;EAkDLiB,KAlDK,mBAkDI,CAER,CApDI,CAsDL;;AAtDK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        blockPrefab :cc.Prefab,\n\n    },\n\n    onLoad () {\n        window.game =this;\n        //this.picNodeArr = Array.from(Array(4), () => new Array(4));\n\n        cc.resources.load('d',(err,texture)=>{\n            this.picTexture  = texture;\n            this.picNodeArr = Array.from(Array(4), () => new Array(4));\n            //cc.log(texture);\n            //this.blockNode.getComponent(\"block\").init(texture,cc.v2(1,0));\n            for (let i = 0; i < 4; i++) {\n                for (let j = 0; j < 4; j++) {\n                    let block = cc.instantiate(this.blockPrefab);\n                    this.node.addChild(block);\n                    block.setPosition(cc.v2(j*180,-i*180));\n                     block.getComponent('block').init(texture,cc.v2(j,i));\n                     //console.log('block',block);\n                     this.picNodeArr[i][j] =block;\n                    // cc.log(this.picNodeArr[i][j]);\n\n                }\n            }\n            this.randPic();\n        });\n    },\n    randPic(){//����˳��\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                let block =this.picNodeArr[i][j];\n                let exIndex ={\n                    i :parseInt(Math.random()*4),\n                    j :parseInt(Math.random()*4),\n                };\n                let exBlock = this.picNodeArr[exIndex.i][exIndex.j];\n                let pos  =block.position;\n                let exPos = exBlock.position;\n                block.setPosition(exPos);\n                exBlock.setPosition(pos);\n                this.picNodeArr[i][j] =exBlock;\n                this.picNodeArr[exIndex.i][exIndex.j]=block;\n            }\n        }\n    },\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}