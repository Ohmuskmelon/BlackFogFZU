{"version":3,"sources":["assets/scripts/tip/tips.js"],"names":["text","Map","set","Key","space","j","k","cc","Class","Component","properties","textLable","Label","init","nowText","textEnd","tt","textIndex","isShowed","node","getChildByName","getComponent","onLoad","setTextData","textData","string","canShow","Global","itemType","showContext","dt","console","log","window","currentscene","director","getScene","_name","name","itemName","content","selfDialog","get","length","slice","closeDialog","active","onDisable","start","update"],"mappings":"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","sourceRoot":"/","sourcesContent":["// let text = [\n//     { state: 'space', content: 'press SPACE to load another scene' },\n//     { state: 'j', content: 'press j to talk to the ghost' },\n//     { state: 'k', content: 'press k to take the tool' },\n// ]\n\nconst text = new Map();\ntext.set(\"doors\", \"按下空格即可切换场景\");\ntext.set(\"npcs\", \"按下J键查看内容\");\ntext.set(\"tools\", \"按下K键拾取物品\");\ntext.set(\"items\", \"按下R键使用所选物品\");\ntext.set(\"games\", \"按下G键查看\");\n\nlet Key = { space: 0, j: 1, k: 2 };\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    textLable: cc.Label,\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  init() {\n    this.nowText = null;\n    this.textEnd = true;\n    this.tt = 0;\n    this.textIndex = -1;\n    this.isShowed = false;\n    this.textLable = this.node\n      .getChildByName(\"textLabel\")\n      .getComponent(cc.Label);\n  },\n\n  onLoad() {\n    this.init();\n  },\n\n  setTextData(textData) {\n    if (!this.textEnd) return;\n    this.textEnd = false;\n    this.nowText = textData;\n    this.textLable.string = \"\";\n  },\n\n  canShow() {\n    return Global.itemType != \" \";\n  },\n\n  showContext(dt) {\n    this.tt += dt;\n    if (!this.isShowed) {\n      console.log(\"type:\" + Global.itemType);\n\n      if(window.Global.itemType == 'selfdialogs'){\n        let currentscene = cc.director.getScene()._name;;\n        let name = window.Global.itemName;\n        let content = window.selfDialog[currentscene][name];\n        this.setTextData(content);\n      }else{\n        this.setTextData(text.get(Global.itemType));\n      }\n      if (this.tt >= 0.05) {\n        if (this.textLable.string.length < this.nowText.length) {\n          this.textLable.string = this.nowText.slice(\n            0,\n            this.textLable.string.length + 1\n          );\n        } else {\n          this.textEnd = true;\n          this.isShowed = true;\n        }\n        this.tt = 0;\n      }\n    }\n  },\n\n  closeDialog() {\n    this.node.active = false;\n  },\n\n  onDisable() {\n    this.textLable.string = \"\";\n    this.init();\n  },\n\n  start() {},\n\n  update(dt) {\n    this.showContext(dt);\n  },\n});\n"]}