{"version":3,"sources":["assets/scripts/tip/tips.js"],"names":["text","Map","set","Key","space","j","k","cc","Class","Component","properties","textLable","Label","init","nowText","textEnd","tt","textIndex","isShowed","node","getChildByName","getComponent","onLoad","setTextData","textData","string","canShow","Global","itemType","showContext","dt","console","log","get","length","slice","closeDialog","active","onDisable","start","update"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAG,IAAIC,GAAJ,EAAb;AACAD,IAAI,CAACE,GAAL,CAAS,OAAT,EAAiB,mCAAjB;AACAF,IAAI,CAACE,GAAL,CAAS,MAAT,EAAgB,4BAAhB;AACAF,IAAI,CAACE,GAAL,CAAS,OAAT,EAAiB,0BAAjB;AACAF,IAAI,CAACE,GAAL,CAAS,OAAT,EAAiB,yBAAjB;AACAF,IAAI,CAACE,GAAL,CAAS,OAAT,EAAiB,2BAAjB;AAGA,IAAIC,GAAG,GAAG;EAAEC,KAAK,EAAE,CAAT;EAAYC,CAAC,EAAE,CAAf;EAAkBC,CAAC,EAAE;AAArB,CAAV;AAEAC,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,SAAS,EAAEJ,EAAE,CAACK;EADN,CAHP;EAOL;EAEAC,IATK,kBASE;IACH,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,OAAL,GAAe,IAAf;IACA,KAAKC,EAAL,GAAU,CAAV;IACA,KAAKC,SAAL,GAAiB,CAAC,CAAlB;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKP,SAAL,GAAiB,KAAKQ,IAAL,CAAUC,cAAV,CAAyB,WAAzB,EAAsCC,YAAtC,CAAmDd,EAAE,CAACK,KAAtD,CAAjB;EACH,CAhBI;EAkBLU,MAlBK,oBAkBI;IACL,KAAKT,IAAL;EACH,CApBI;EAsBLU,WAtBK,uBAsBOC,QAtBP,EAsBiB;IAClB,IAAI,CAAC,KAAKT,OAAV,EAAmB;IACnB,KAAKA,OAAL,GAAe,KAAf;IACA,KAAKD,OAAL,GAAeU,QAAf;IACA,KAAKb,SAAL,CAAec,MAAf,GAAwB,EAAxB;EACH,CA3BI;EA6BLC,OA7BK,qBA6BI;IACL,OAAOC,MAAM,CAACC,QAAP,IAAiB,GAAxB;EACH,CA/BI;EAmCLC,WAnCK,uBAmCOC,EAnCP,EAmCU;IACX,KAAKd,EAAL,IAAWc,EAAX;;IACA,IAAI,CAAC,KAAKZ,QAAV,EAAoB;MAChBa,OAAO,CAACC,GAAR,CAAY,UAAQL,MAAM,CAACC,QAA3B;MACA,KAAKL,WAAL,CAAiBvB,IAAI,CAACiC,GAAL,CAASN,MAAM,CAACC,QAAhB,CAAjB;;MACA,IAAI,KAAKZ,EAAL,IAAW,IAAf,EAAqB;QACjB,IAAI,KAAKL,SAAL,CAAec,MAAf,CAAsBS,MAAtB,GAA+B,KAAKpB,OAAL,CAAaoB,MAAhD,EAAwD;UACpD,KAAKvB,SAAL,CAAec,MAAf,GAAwB,KAAKX,OAAL,CAAaqB,KAAb,CAAmB,CAAnB,EAAsB,KAAKxB,SAAL,CAAec,MAAf,CAAsBS,MAAtB,GAA+B,CAArD,CAAxB;QACH,CAFD,MAEO;UACH,KAAKnB,OAAL,GAAe,IAAf;UACA,KAAKG,QAAL,GAAgB,IAAhB;QACH;;QACD,KAAKF,EAAL,GAAU,CAAV;MACH;IACJ;EACJ,CAlDI;EAoDLoB,WApDK,yBAoDS;IACV,KAAKjB,IAAL,CAAUkB,MAAV,GAAmB,KAAnB;EACH,CAtDI;EAwDLC,SAxDK,uBAwDO;IACR,KAAK3B,SAAL,CAAec,MAAf,GAAwB,EAAxB;IACA,KAAKZ,IAAL;EACH,CA3DI;EA6DL0B,KA7DK,mBA6DG,CACP,CA9DI;EAgELC,MAhEK,kBAgEEV,EAhEF,EAgEM;IACP,KAAKD,WAAL,CAAiBC,EAAjB;EACH;AAlEI,CAAT","sourceRoot":"/","sourcesContent":["// let text = [\n//     { state: 'space', content: 'press SPACE to load another scene' },\n//     { state: 'j', content: 'press j to talk to the ghost' },\n//     { state: 'k', content: 'press k to take the tool' },\n// ]\n\nconst text = new Map();\ntext.set('doors','press SPACE to load another scene');\ntext.set('npcs','press j to talk to the npc');\ntext.set('tools','press k to take the tool');\ntext.set('items','press r to use the tool');\ntext.set('games','press g to start the game')\n \n\nlet Key = { space: 0, j: 1 ,k: 2};\n \ncc.Class({\n    extends: cc.Component,\n \n    properties: {\n        textLable: cc.Label,\n    },\n \n    // LIFE-CYCLE CALLBACKS:\n \n    init() {\n        this.nowText = null;\n        this.textEnd = true;\n        this.tt = 0;\n        this.textIndex = -1;\n        this.isShowed = false;\n        this.textLable = this.node.getChildByName(\"textLabel\").getComponent(cc.Label);\n    },\n\n    onLoad() {\n        this.init();\n    },\n \n    setTextData(textData) {\n        if (!this.textEnd) return;\n        this.textEnd = false;\n        this.nowText = textData;\n        this.textLable.string = '';\n    },\n\n    canShow(){\n        return Global.itemType!=' ';\n    },\n\n \n\n    showContext(dt){\n        this.tt += dt;\n        if (!this.isShowed) {\n            console.log(\"type:\"+Global.itemType)\n            this.setTextData(text.get(Global.itemType));\n            if (this.tt >= 0.05) {\n                if (this.textLable.string.length < this.nowText.length) {\n                    this.textLable.string = this.nowText.slice(0, this.textLable.string.length + 1);\n                } else {\n                    this.textEnd = true;\n                    this.isShowed = true;\n                }\n                this.tt = 0;\n            }\n        }\n    },\n \n    closeDialog() {\n        this.node.active = false;\n    },\n\n    onDisable() {\n        this.textLable.string = '';\n        this.init();\n    },\n \n    start() {\n    },\n \n    update(dt) {\n        this.showContext(dt);\n    },\n});"]}